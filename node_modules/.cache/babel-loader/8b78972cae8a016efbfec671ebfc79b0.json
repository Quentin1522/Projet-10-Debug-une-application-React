{"ast":null,"code":"var _jsxFileName = \"/Users/quentinhorneck/Documents/Projet10/Debuggez-une-application-React.JS/src/containers/Form/index.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Field, { FIELD_TYPES } from \"../../components/Field\";\nimport Select from \"../../components/Select\";\nimport Button, { BUTTON_TYPES } from \"../../components/Button\"; // Fonction de simulation d'appel à une API\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mockContactApi = () => new Promise(resolve => {\n  setTimeout(resolve, 1000);\n}); // Définition du composant Form\n\n\nconst Form = _ref => {\n  _s();\n\n  let {\n    onSuccess,\n    onError,\n    confirmationMessage\n  } = _ref;\n  // État local pour gérer l'envoi du formulaire\n  const [sending, setSending] = useState(false); // Callback pour envoyer le formulaire\n\n  const sendContact = useCallback(async evt => {\n    evt.preventDefault();\n    setSending(true);\n    const formFields = evt.target.elements;\n    let isAnyFieldEmpty = false;\n\n    for (let i = 0; i < formFields.length; i++) {\n      if (formFields[i].nodeName === \"INPUT\" || formFields[i].nodeName === \"TEXTAREA\") {\n        if (!formFields[i].value.trim()) {\n          isAnyFieldEmpty = true;\n          break;\n        }\n      }\n    }\n\n    if (isAnyFieldEmpty) {\n      setConfirmationMessage(\"Veuillez remplir tous les champs du formulaire\");\n      return;\n    }\n\n    setSending(true);\n\n    try {\n      await mockContactApi();\n      setSending(false);\n      setConfirmationMessage(\"Message envoyé !\");\n    } catch (err) {\n      setSending(false);\n      onError(err);\n    }\n  }, [onSuccess, onError]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: sendContact,\n    children: [confirmationMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"confirmation-message\",\n      children: confirmationMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          placeholder: \"\",\n          label: \"Nom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          placeholder: \"\",\n          label: \"Pr\\xE9nom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          selection: [\"Personel\", \"Entreprise\"],\n          onChange: () => null,\n          label: \"Personel / Entreprise\",\n          type: \"large\",\n          titleEmpty: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          placeholder: \"\",\n          label: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: BUTTON_TYPES.SUBMIT,\n          disabled: sending,\n          children: sending ? \"En cours\" : \"Envoyer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          placeholder: \"message\",\n          label: \"Message\",\n          type: FIELD_TYPES.TEXTAREA\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}; // Validation des propriétés du composant Form\n\n\n_s(Form, \"xlCfd/hTPL1r13um4H5Lxem8mPc=\");\n\n_c = Form;\nForm.propTypes = {\n  onError: PropTypes.func,\n  onSuccess: PropTypes.func,\n  confirmationMessage: PropTypes.string\n}; // Définition des valeurs par défaut des propriétés du composant Form\n\nForm.defaultProps = {\n  onError: () => null,\n  onSuccess: () => null,\n  confirmationMessage: \"\"\n};\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/quentinhorneck/Documents/Projet10/Debuggez-une-application-React.JS/src/containers/Form/index.js"],"names":["useCallback","useState","PropTypes","Field","FIELD_TYPES","Select","Button","BUTTON_TYPES","mockContactApi","Promise","resolve","setTimeout","Form","onSuccess","onError","confirmationMessage","sending","setSending","sendContact","evt","preventDefault","formFields","target","elements","isAnyFieldEmpty","i","length","nodeName","value","trim","setConfirmationMessage","err","SUBMIT","TEXTAREA","propTypes","func","string","defaultProps"],"mappings":"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","sourcesContent":["import { useCallback, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Field, { FIELD_TYPES } from \"../../components/Field\";\nimport Select from \"../../components/Select\";\nimport Button, { BUTTON_TYPES } from \"../../components/Button\";\n\n// Fonction de simulation d'appel à une API\nconst mockContactApi = () => new Promise((resolve) => { setTimeout(resolve, 1000); });\n\n// Définition du composant Form\nconst Form = ({ onSuccess, onError, confirmationMessage }) => {\n  // État local pour gérer l'envoi du formulaire\n  const [sending, setSending] = useState(false);\n\n  // Callback pour envoyer le formulaire\n  const sendContact = useCallback(\n    async (evt) => {\n      evt.preventDefault();\n      setSending(true);\n\n      const formFields = evt.target.elements;\n      let isAnyFieldEmpty = false;\n      for (let i = 0; i < formFields.length; i++) {\n        if (formFields[i].nodeName === \"INPUT\" || formFields[i].nodeName === \"TEXTAREA\") {\n          if (!formFields[i].value.trim()) {\n            isAnyFieldEmpty = true;\n            break;\n          }\n        }\n      }\n\n      if (isAnyFieldEmpty) {\n        setConfirmationMessage(\"Veuillez remplir tous les champs du formulaire\");\n        return;\n      }\n\n      setSending(true);\n\n      try {\n        await mockContactApi();\n        setSending(false);\n        setConfirmationMessage(\"Message envoyé !\");\n      } catch (err) {\n        setSending(false);\n        onError(err);\n      }\n    },\n    [onSuccess, onError]\n  );\n\n  return (\n    <form onSubmit={sendContact}>\n      {confirmationMessage && <div className=\"confirmation-message\">{confirmationMessage}</div>}\n      <div className=\"row\">\n        <div className=\"col\">\n          <Field placeholder=\"\" label=\"Nom\" />\n          <Field placeholder=\"\" label=\"Prénom\" />\n          <Select\n            selection={[\"Personel\", \"Entreprise\"]}\n            onChange={() => null}\n            label=\"Personel / Entreprise\"\n            type=\"large\"\n            titleEmpty\n          />\n          <Field placeholder=\"\" label=\"Email\" />\n          <Button type={BUTTON_TYPES.SUBMIT} disabled={sending}>\n            {sending ? \"En cours\" : \"Envoyer\"}\n          </Button>\n        </div>\n        <div className=\"col\">\n          <Field\n            placeholder=\"message\"\n            label=\"Message\"\n            type={FIELD_TYPES.TEXTAREA}\n          />\n        </div>\n      </div>\n    </form>\n  );\n};\n\n// Validation des propriétés du composant Form\nForm.propTypes = {\n  onError: PropTypes.func,\n  onSuccess: PropTypes.func,\n  confirmationMessage: PropTypes.string,\n};\n\n// Définition des valeurs par défaut des propriétés du composant Form\nForm.defaultProps = {\n  onError: () => null,\n  onSuccess: () => null,\n  confirmationMessage: \"\",\n};\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}