{"ast":null,"code":"var _jsxFileName = \"/Users/quentinhorneck/Documents/Projet10/Debuggez-une-application-React.JS/src/containers/Slider/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useData } from \"../../contexts/DataContext\";\nimport { getMonth } from \"../../helpers/Date\";\nimport \"./style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Slider = () => {\n  _s();\n\n  //utilisation du hook useDate pour récupérer les données\n  const {\n    data\n  } = useData(); //initialisation de l'état 'index' avec la valeur 0\n\n  const [index, setIndex] = useState(0); //\n\n  const byDateDesc = data === null || data === void 0 ? void 0 : data.focus.sort((evtA, evtB) => //tri des évenements par date croissantes\n  new Date(evtA.date) < new Date(evtB.date) ? -1 : 1);\n\n  const nextCard = () => {\n    //vérification si byDateDesc est défini\n    if (byDateDesc) {\n      setTimeout( //maj de l'index en s'assurant qu'il reste dans les limites\n      () => setIndex(index < byDateDesc.length - 1 ? index + 1 : 0), 5000);\n    }\n  };\n\n  useEffect(() => {\n    nextCard();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SlideCardList\",\n    children: [byDateDesc === null || byDateDesc === void 0 ? void 0 : byDateDesc.map((event, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `SlideCard SlideCard--${index === idx ? \"display\" : \"hide\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: event.cover,\n        alt: \"forum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SlideCard__descriptionContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"SlideCard__description\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: event.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: event.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: getMonth(new Date(event.date))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, event.title, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SlideCard__paginationContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SlideCard__pagination\",\n        children: byDateDesc === null || byDateDesc === void 0 ? void 0 : byDateDesc.map((focus, radioIdx) => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"radio-button\",\n          checked: index === radioIdx // index changed\n          ,\n          readOnly: true\n        }, focus.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Slider, \"O0IxBK3bSx2E5/5iaqD9rXSZzGQ=\", false, function () {\n  return [useData];\n});\n\n_c = Slider;\nexport default Slider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"sources":["/Users/quentinhorneck/Documents/Projet10/Debuggez-une-application-React.JS/src/containers/Slider/index.js"],"names":["useEffect","useState","useData","getMonth","Slider","data","index","setIndex","byDateDesc","focus","sort","evtA","evtB","Date","date","nextCard","setTimeout","length","map","event","idx","cover","title","description","radioIdx"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,OAAO,cAAP;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWH,OAAO,EAAxB,CAFmB,CAGnB;;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAD,CAAlC,CAJmB,CAImB;;AACtC,QAAMO,UAAU,GAAGH,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEI,KAAN,CAAYC,IAAZ,CAAiB,CAACC,IAAD,EAAOC,IAAP,KACpC;AACE,MAAIC,IAAJ,CAASF,IAAI,CAACG,IAAd,IAAsB,IAAID,IAAJ,CAASD,IAAI,CAACE,IAAd,CAAtB,GAA4C,CAAC,CAA7C,GAAiD,CAFhC,CAAnB;;AAKA,QAAMC,QAAQ,GAAG,MAAM;AACrB;AACA,QAAIP,UAAJ,EAAgB;AACdQ,MAAAA,UAAU,EACR;AACA,YAAMT,QAAQ,CAACD,KAAK,GAAGE,UAAU,CAACS,MAAX,GAAoB,CAA5B,GAAgCX,KAAK,GAAG,CAAxC,GAA4C,CAA7C,CAFN,EAGR,IAHQ,CAAV;AAKD;AACF,GATD;;AAUAN,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,QAAQ;AACT,GAFQ,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,eACCP,UADD,aACCA,UADD,uBACCA,UAAU,CAAEU,GAAZ,CAAgB,CAACC,KAAD,EAAQC,GAAR,kBACf;AAEE,MAAA,SAAS,EAAG,wBAAuBd,KAAK,KAAKc,GAAV,GAAgB,SAAhB,GAA4B,MAAO,EAFxE;AAAA,8BAIE;AAAK,QAAA,GAAG,EAAED,KAAK,CAACE,KAAhB;AAAuB,QAAA,GAAG,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAA,kCACE;AAAA,sBAAKF,KAAK,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAIH,KAAK,CAACI;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sBAAMpB,QAAQ,CAAC,IAAIU,IAAJ,CAASM,KAAK,CAACL,IAAf,CAAD;AAAd;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF;AAAA,OACOK,KAAK,CAACG,KADb;AAAA;AAAA;AAAA;AAAA,YADD,CADD,eAiBA;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,kBACGd,UADH,aACGA,UADH,uBACGA,UAAU,CAAEU,GAAZ,CAAgB,CAACT,KAAD,EAAQe,QAAR,kBACf;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,IAAI,EAAC,cAHP;AAIE,UAAA,OAAO,EAAElB,KAAK,KAAKkB,QAJrB,CAI+B;AAJ/B;AAKE,UAAA,QAAQ;AALV,WACOf,KAAK,CAACa,KADb;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAjBA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CAzDD;;GAAMlB,M;UAEaF,O;;;KAFbE,M;AA2DN,eAAeA,MAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useData } from \"../../contexts/DataContext\";\nimport { getMonth } from \"../../helpers/Date\";\n\nimport \"./style.scss\";\n\nconst Slider = () => {\n  //utilisation du hook useDate pour récupérer les données\n  const { data } = useData();\n  //initialisation de l'état 'index' avec la valeur 0\n  const [index, setIndex] = useState(0);//\n  const byDateDesc = data?.focus.sort((evtA, evtB) =>\n  //tri des évenements par date croissantes\n    new Date(evtA.date) < new Date(evtB.date) ? -1 : 1\n  );\n\n  const nextCard = () => {\n    //vérification si byDateDesc est défini\n    if (byDateDesc) {\n      setTimeout(\n        //maj de l'index en s'assurant qu'il reste dans les limites\n        () => setIndex(index < byDateDesc.length - 1 ? index + 1 : 0),\n        5000\n      );\n    }\n  };\n  useEffect(() => {\n    nextCard();\n  });\n\n  return (\n    <div className=\"SlideCardList\">\n    {byDateDesc?.map((event, idx) => (\n      <div\n        key={event.title}\n        className={`SlideCard SlideCard--${index === idx ? \"display\" : \"hide\"}`}\n      >\n        <img src={event.cover} alt=\"forum\" />\n        <div className=\"SlideCard__descriptionContainer\">\n          <div className=\"SlideCard__description\">\n            <h3>{event.title}</h3>\n            <p>{event.description}</p>\n            <div>{getMonth(new Date(event.date))}</div>\n          </div>\n        </div>\n      </div>\n    ))}\n\n    <div className=\"SlideCard__paginationContainer\">\n      <div className=\"SlideCard__pagination\">\n        {byDateDesc?.map((focus, radioIdx) => (\n          <input\n            key={focus.title}\n            type=\"radio\"\n            name=\"radio-button\"\n            checked={index === radioIdx} // index changed\n            readOnly\n          />\n        ))}\n      </div>\n    </div>\n  </div>\n);\n};\n\nexport default Slider;"]},"metadata":{},"sourceType":"module"}