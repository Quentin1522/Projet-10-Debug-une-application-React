{"ast":null,"code":"var _jsxFileName = \"/Users/quentinhorneck/Documents/Projet10/Debuggez-une-application-React.JS/src/containers/Events/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport EventCard from \"../../components/EventCard\";\nimport Select from \"../../components/Select\";\nimport { useData } from \"../../contexts/DataContext\";\nimport Modal from \"../Modal\";\nimport ModalEvent from \"../ModalEvent\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PER_PAGE = 9;\n\nconst EventList = () => {\n  _s();\n\n  const {\n    data,\n    error\n  } = useData();\n  const [type, setType] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const filteredEvents = (type ? data === null || data === void 0 ? void 0 : data.events.filter(event => event.type === type) : data === null || data === void 0 ? void 0 : data.events) || [];\n\n  const changeType = eventType => {\n    setCurrentPage(1);\n    setType(eventType); // Mise à jour du type en fonction de l'option sélectionnée\n  };\n\n  const pageNumber = Math.ceil(filteredEvents.length / PER_PAGE);\n  const typeList = new Set(data === null || data === void 0 ? void 0 : data.events.map(event => event.type));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"An error occurred\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this), data === null ? \"Loading\" : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"SelectTitle\",\n        children: \"Cat\\xE9gories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        selection: ['Tous les types', ...Array.from(typeList)],\n        onChange: value => changeType(value === 'Tous les types' ? null : value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"events\",\n        className: \"ListContainer\",\n        children: filteredEvents.slice((currentPage - 1) * PER_PAGE, currentPage * PER_PAGE).map(event => /*#__PURE__*/_jsxDEV(Modal, {\n          Content: /*#__PURE__*/_jsxDEV(ModalEvent, {\n            event: event\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 46\n          }, this),\n          children: _ref => {\n            let {\n              setIsOpened\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(EventCard, {\n              onClick: () => setIsOpened(true),\n              imageSrc: event.cover,\n              title: event.title,\n              date: new Date(event.date),\n              label: event.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 19\n            }, this);\n          }\n        }, event.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Pagination\",\n        children: [...Array(pageNumber)].map((_, n) => /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#events\",\n          onClick: () => setCurrentPage(n + 1),\n          children: n + 1\n        }, n, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(EventList, \"53abh5PcW2g/+k4RjTRJmUZKMtw=\", false, function () {\n  return [useData];\n});\n\n_c = EventList;\nexport default EventList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"sources":["/Users/quentinhorneck/Documents/Projet10/Debuggez-une-application-React.JS/src/containers/Events/index.js"],"names":["useState","EventCard","Select","useData","Modal","ModalEvent","PER_PAGE","EventList","data","error","type","setType","currentPage","setCurrentPage","filteredEvents","events","filter","event","changeType","eventType","pageNumber","Math","ceil","length","typeList","Set","map","Array","from","value","slice","setIsOpened","cover","title","Date","date","id","_","n"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport EventCard from \"../../components/EventCard\";\nimport Select from \"../../components/Select\";\nimport { useData } from \"../../contexts/DataContext\";\nimport Modal from \"../Modal\";\nimport ModalEvent from \"../ModalEvent\";\n\nimport \"./style.css\";\n\nconst PER_PAGE = 9;\n\nconst EventList = () => {\n  const { data, error } = useData();\n  const [type, setType] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const filteredEvents = (type ? data?.events.filter(event => event.type === type) : data?.events) || [];\n\n  const changeType = (eventType) => {\n    setCurrentPage(1);\n    setType(eventType); // Mise à jour du type en fonction de l'option sélectionnée\n  };\n\n  const pageNumber = Math.ceil(filteredEvents.length / PER_PAGE);\n\n  const typeList = new Set(data?.events.map((event) => event.type));\n\n  return (\n    <>\n      {error && <div>An error occurred</div>}\n      {data === null ? (\n        \"Loading\"\n      ) : (\n        <>\n          <h3 className=\"SelectTitle\">Catégories</h3>\n          <Select\n            selection={['Tous les types', ...Array.from(typeList)]}\n            onChange={(value) => changeType(value === 'Tous les types' ? null : value)}\n          />\n          <div id=\"events\" className=\"ListContainer\">\n            {filteredEvents.slice((currentPage - 1) * PER_PAGE, currentPage * PER_PAGE).map((event) => (\n              <Modal key={event.id} Content={<ModalEvent event={event} />}>\n                {({ setIsOpened }) => (\n                  <EventCard\n                    onClick={() => setIsOpened(true)}\n                    imageSrc={event.cover}\n                    title={event.title}\n                    date={new Date(event.date)}\n                    label={event.type}\n                  />\n                )}\n              </Modal>\n            ))}\n          </div>\n          <div className=\"Pagination\">\n            {[...Array(pageNumber)].map((_, n) => (\n              <a key={n} href=\"#events\" onClick={() => setCurrentPage(n + 1)}>\n                {n + 1}\n              </a>\n            ))}\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default EventList;"]},"metadata":{},"sourceType":"module"}