{"ast":null,"code":"var _jsxFileName = \"/Users/quentinhorneck/Documents/Projet10/Debuggez-une-application-React.JS/src/components/EventCard/index.js\";\nimport React from \"react\"; // Import de React\n\nimport PropTypes from \"prop-types\"; // Import des PropTypes\n\nimport { getMonth } from \"../../helpers/Date\"; // Import de la fonction getMonth pour extraire le mois de la date\n\nimport \"./style.scss\"; // Import du fichier de style\n// Définition du composant EventCard avec rin comme nouvelle prop\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EventCard = _ref => {\n  let {\n    imageSrc,\n    imageAlt,\n    date = new Date(),\n    title,\n    label,\n    small = false,\n    rin,\n    // Nouvelle prop rin\n    ...props\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"card-testid\",\n    className: `EventCard${small ? \" EventCard--small\" : \"\"}`,\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"EventCard__imageContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        \"data-testid\": \"card-image-testid\",\n        src: imageSrc,\n        alt: imageAlt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"EventCard__label\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"EventCard__descriptionContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"EventCard__title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"EventCard__month\",\n        children: getMonth(date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), rin && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"EventCard__rin\",\n        children: rin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }, this);\n}; // Définition des types attendus des props pour le composant EventCard\n\n\n_c = EventCard;\nEventCard.propTypes = {\n  imageSrc: PropTypes.string.isRequired,\n  // URL de l'image requise\n  imageAlt: PropTypes.string,\n  // Texte alternatif de l'image\n  date: PropTypes.instanceOf(Date).isRequired,\n  // Date de l'événement requise\n  title: PropTypes.string.isRequired,\n  // Titre de l'événement requis\n  small: PropTypes.bool,\n  // Indique si la carte est petite\n  label: PropTypes.string.isRequired,\n  // Étiquette de l'événement requise\n  rin: PropTypes.string // Prop rin définie comme une chaîne de caractères\n\n}; // Définition des valeurs par défaut des props pour le composant EventCard\n\nEventCard.defaultProps = {\n  imageAlt: \"image\",\n  // Texte alternatif par défaut pour l'image\n  small: false // Par défaut, la carte n'est pas petite\n\n};\nexport default EventCard; // Export du composant EventCard\n\nvar _c;\n\n$RefreshReg$(_c, \"EventCard\");","map":{"version":3,"sources":["/Users/quentinhorneck/Documents/Projet10/Debuggez-une-application-React.JS/src/components/EventCard/index.js"],"names":["React","PropTypes","getMonth","EventCard","imageSrc","imageAlt","date","Date","title","label","small","rin","props","propTypes","string","isRequired","instanceOf","bool","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAA2B;;AAC3B,OAAOC,SAAP,MAAsB,YAAtB,C,CAAoC;;AACpC,SAASC,QAAT,QAAyB,oBAAzB,C,CAA+C;;AAC/C,OAAO,cAAP,C,CAAuB;AAEvB;;;;AACA,MAAMC,SAAS,GAAG;AAAA,MAAC;AACjBC,IAAAA,QADiB;AAEjBC,IAAAA,QAFiB;AAGjBC,IAAAA,IAAI,GAAG,IAAIC,IAAJ,EAHU;AAIjBC,IAAAA,KAJiB;AAKjBC,IAAAA,KALiB;AAMjBC,IAAAA,KAAK,GAAG,KANS;AAOjBC,IAAAA,GAPiB;AAOZ;AACL,OAAGC;AARc,GAAD;AAAA,sBAUhB;AACE,mBAAY,aADd;AAEE,IAAA,SAAS,EAAG,YAAWF,KAAK,GAAG,mBAAH,GAAyB,EAAG,EAF1D;AAAA,OAGME,KAHN;AAAA,4BAKE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,8BACE;AACE,uBAAY,mBADd;AAEE,QAAA,GAAG,EAAER,QAFP;AAGE,QAAA,GAAG,EAAEC;AAHP;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,kBAAmCI;AAAnC;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAaE;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,kBAAmCD;AAAnC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,kBAAmCN,QAAQ,CAACI,IAAD;AAA3C;AAAA;AAAA;AAAA;AAAA,cAFF,EAIGK,GAAG,iBAAI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,kBAAiCA;AAAjC;AAAA;AAAA;AAAA;AAAA,cAJV;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UAVgB;AAAA,CAAlB,C,CAgCA;;;KAhCMR,S;AAiCNA,SAAS,CAACU,SAAV,GAAsB;AACpBT,EAAAA,QAAQ,EAAEH,SAAS,CAACa,MAAV,CAAiBC,UADP;AACmB;AACvCV,EAAAA,QAAQ,EAAEJ,SAAS,CAACa,MAFA;AAEQ;AAC5BR,EAAAA,IAAI,EAAEL,SAAS,CAACe,UAAV,CAAqBT,IAArB,EAA2BQ,UAHb;AAGyB;AAC7CP,EAAAA,KAAK,EAAEP,SAAS,CAACa,MAAV,CAAiBC,UAJJ;AAIgB;AACpCL,EAAAA,KAAK,EAAET,SAAS,CAACgB,IALG;AAKG;AACvBR,EAAAA,KAAK,EAAER,SAAS,CAACa,MAAV,CAAiBC,UANJ;AAMgB;AACpCJ,EAAAA,GAAG,EAAEV,SAAS,CAACa,MAPK,CAOG;;AAPH,CAAtB,C,CAUA;;AACAX,SAAS,CAACe,YAAV,GAAyB;AACvBb,EAAAA,QAAQ,EAAE,OADa;AACJ;AACnBK,EAAAA,KAAK,EAAE,KAFgB,CAET;;AAFS,CAAzB;AAKA,eAAeP,SAAf,C,CAA0B","sourcesContent":["import React from \"react\"; // Import de React\nimport PropTypes from \"prop-types\"; // Import des PropTypes\nimport { getMonth } from \"../../helpers/Date\"; // Import de la fonction getMonth pour extraire le mois de la date\nimport \"./style.scss\"; // Import du fichier de style\n\n// Définition du composant EventCard avec rin comme nouvelle prop\nconst EventCard = ({\n  imageSrc,\n  imageAlt,\n  date = new Date(),\n  title,\n  label,\n  small = false,\n  rin, // Nouvelle prop rin\n  ...props\n}) => (\n  <div\n    data-testid=\"card-testid\"\n    className={`EventCard${small ? \" EventCard--small\" : \"\"}`}\n    {...props}\n  >\n    <div className=\"EventCard__imageContainer\">\n      <img\n        data-testid=\"card-image-testid\"\n        src={imageSrc}\n        alt={imageAlt}\n      />\n      <div className=\"EventCard__label\">{label}</div>\n    </div>\n    <div className=\"EventCard__descriptionContainer\">\n      <div className=\"EventCard__title\">{title}</div>\n      <div className=\"EventCard__month\">{getMonth(date)}</div>\n      {/* Affichage de rin s'il est défini */}\n      {rin && <div className=\"EventCard__rin\">{rin}</div>}\n    </div>\n  </div>\n);\n\n// Définition des types attendus des props pour le composant EventCard\nEventCard.propTypes = {\n  imageSrc: PropTypes.string.isRequired, // URL de l'image requise\n  imageAlt: PropTypes.string, // Texte alternatif de l'image\n  date: PropTypes.instanceOf(Date).isRequired, // Date de l'événement requise\n  title: PropTypes.string.isRequired, // Titre de l'événement requis\n  small: PropTypes.bool, // Indique si la carte est petite\n  label: PropTypes.string.isRequired, // Étiquette de l'événement requise\n  rin: PropTypes.string, // Prop rin définie comme une chaîne de caractères\n};\n\n// Définition des valeurs par défaut des props pour le composant EventCard\nEventCard.defaultProps = {\n  imageAlt: \"image\", // Texte alternatif par défaut pour l'image\n  small: false, // Par défaut, la carte n'est pas petite\n};\n\nexport default EventCard; // Export du composant EventCard"]},"metadata":{},"sourceType":"module"}