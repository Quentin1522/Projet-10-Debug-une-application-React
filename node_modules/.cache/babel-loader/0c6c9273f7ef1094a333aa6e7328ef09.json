{"ast":null,"code":"var _jsxFileName = \"/Users/quentinhorneck/Documents/Projet10/Debuggez-une-application-React.JS/src/components/EventCard/index.js\";\nimport PropTypes from \"prop-types\";\nimport { getMonth } from \"../../helpers/Date\";\nimport \"./style.scss\"; //définition du composant EventCard\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EventCard = _ref => {\n  let {\n    //url de l'image de l'évenement\n    imageSrc,\n    //Texte de l'image\n    imageAlt,\n    //date de l'évenement, par défaut la date actuel\n    date = new Date(),\n    //titre de l'évenement\n    title,\n    //ériquette de l'évenement\n    label,\n    //indique si la carte est petit par défaualt false\n    small = false,\n    //nouvelle prop rin\n    ...props\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"realisations\",\n    \"data-testid\": \"card-testid\",\n    className: `EventCard${small ? \" EventCard--small\" : \"\"}`,\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"EventCard__imageContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        \"data-testid\": \"card-image-testid\",\n        src: imageSrc,\n        alt: imageAlt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"EventCard__label\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"EventCard__descriptionContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"EventCard__title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"EventCard__month\",\n        children: getMonth(date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}; //définiation des types attendus des props pour le composant EventCard\n\n\n_c = EventCard;\nEventCard.propTypes = {\n  //URL se l'image requise\n  imageSrc: PropTypes.string.isRequired,\n  //texte de l'image\n  imageAlt: PropTypes.string,\n  //date de l'évenement requis\n  date: PropTypes.instanceOf(Date).isRequired,\n  //titre de l'évenement requis\n  title: PropTypes.string.isRequired,\n  //indique su la carte est petite\n  small: PropTypes.bool,\n  //étiquette de l'évenement requise\n  label: PropTypes.string.isRequired\n}; //définition des valeurs par défaut des props pour le comosant EventCard\n\nEventCard.defaultProps = {\n  //texte de l'image\n  imageAlt: \"image\",\n  //par défault la carte n'est pas petite\n  small: false\n};\nexport default EventCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventCard\");","map":{"version":3,"sources":["/Users/quentinhorneck/Documents/Projet10/Debuggez-une-application-React.JS/src/components/EventCard/index.js"],"names":["PropTypes","getMonth","EventCard","imageSrc","imageAlt","date","Date","title","label","small","props","propTypes","string","isRequired","instanceOf","bool","defaultProps"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAGA,OAAO,cAAP,C,CAEA;;;;AACA,MAAMC,SAAS,GAAG;AAAA,MAAC;AACjB;AACAC,IAAAA,QAFiB;AAGjB;AACAC,IAAAA,QAJiB;AAKjB;AACAC,IAAAA,IAAI,GAAG,IAAIC,IAAJ,EANU;AAOjB;AACAC,IAAAA,KARiB;AASjB;AACAC,IAAAA,KAViB;AAWjB;AACAC,IAAAA,KAAK,GAAG,KAZS;AAajB;AACA,OAAGC;AAdc,GAAD;AAAA,sBAgBd;AAAK,IAAA,EAAE,EAAC,cAAR;AACE,mBAAY,aADd;AAEE,IAAA,SAAS,EAAG,YAAWD,KAAK,GAAG,mBAAH,GAAyB,EAAG,EAF1D;AAAA,OAGMC,KAHN;AAAA,4BAKE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,8BACE;AAAK,uBAAY,mBAAjB;AAAqC,QAAA,GAAG,EAAEP,QAA1C;AAAoD,QAAA,GAAG,EAAEC;AAAzD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,kBAAmCI;AAAnC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eASE;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,kBAAmCD;AAAnC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,kBAAmCN,QAAQ,CAACI,IAAD;AAA3C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UAhBc;AAAA,CAAlB,C,CAgCE;;;KAhCIH,S;AAiCNA,SAAS,CAACS,SAAV,GAAsB;AACpB;AACAR,EAAAA,QAAQ,EAAEH,SAAS,CAACY,MAAV,CAAiBC,UAFP;AAGpB;AACAT,EAAAA,QAAQ,EAAEJ,SAAS,CAACY,MAJA;AAKpB;AACAP,EAAAA,IAAI,EAAEL,SAAS,CAACc,UAAV,CAAqBR,IAArB,EAA2BO,UANb;AAOpB;AACAN,EAAAA,KAAK,EAAEP,SAAS,CAACY,MAAV,CAAiBC,UARJ;AASpB;AACAJ,EAAAA,KAAK,EAAET,SAAS,CAACe,IAVG;AAWpB;AACAP,EAAAA,KAAK,EAAER,SAAS,CAACY,MAAV,CAAiBC;AAZJ,CAAtB,C,CAeA;;AACAX,SAAS,CAACc,YAAV,GAAyB;AACvB;AACAZ,EAAAA,QAAQ,EAAE,OAFa;AAGvB;AACAK,EAAAA,KAAK,EAAE;AAJgB,CAAzB;AAOA,eAAeP,SAAf","sourcesContent":["import PropTypes from \"prop-types\";\nimport { getMonth } from \"../../helpers/Date\";\n\n\nimport \"./style.scss\";\n\n//définition du composant EventCard\nconst EventCard = ({\n  //url de l'image de l'évenement\n  imageSrc,\n  //Texte de l'image\n  imageAlt,\n  //date de l'évenement, par défaut la date actuel\n  date = new Date(),\n  //titre de l'évenement\n  title,\n  //ériquette de l'évenement\n  label,\n  //indique si la carte est petit par défaualt false\n  small = false,\n  //nouvelle prop rin\n  ...props\n}) => (\n    <div id=\"realisations\"\n      data-testid=\"card-testid\"\n      className={`EventCard${small ? \" EventCard--small\" : \"\"}`}\n      {...props}\n    >\n      <div className=\"EventCard__imageContainer\">\n        <img data-testid=\"card-image-testid\" src={imageSrc} alt={imageAlt} />\n        <div className=\"EventCard__label\">{label}</div>\n      </div>\n      <div className=\"EventCard__descriptionContainer\">\n        <div className=\"EventCard__title\">{title}</div>\n        <div className=\"EventCard__month\">{getMonth(date)}</div>\n      </div>\n    </div>\n  );\n\n  //définiation des types attendus des props pour le composant EventCard\nEventCard.propTypes = {\n  //URL se l'image requise\n  imageSrc: PropTypes.string.isRequired,\n  //texte de l'image\n  imageAlt: PropTypes.string,\n  //date de l'évenement requis\n  date: PropTypes.instanceOf(Date).isRequired,\n  //titre de l'évenement requis\n  title: PropTypes.string.isRequired,\n  //indique su la carte est petite\n  small: PropTypes.bool,\n  //étiquette de l'évenement requise\n  label: PropTypes.string.isRequired,\n};\n\n//définition des valeurs par défaut des props pour le comosant EventCard\nEventCard.defaultProps = {\n  //texte de l'image\n  imageAlt: \"image\",\n  //par défault la carte n'est pas petite\n  small: false,\n}\n\nexport default EventCard;\n"]},"metadata":{},"sourceType":"module"}