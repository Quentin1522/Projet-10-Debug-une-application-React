{"ast":null,"code":"var _jsxFileName = \"/Users/quentinhorneck/Documents/Projet10/Debuggez-une-application-React.JS/src/containers/Form/index.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Field, { FIELD_TYPES } from \"../../components/Field\";\nimport Select from \"../../components/Select\";\nimport Button, { BUTTON_TYPES } from \"../../components/Button\"; //simule un appel à une API\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mockContactApi = () => new Promise(resolve => {\n  setTimeout(resolve, 1000);\n}); //définition du composant form\n\n\nconst Form = _ref => {\n  _s();\n\n  let {\n    onSuccess,\n    onError\n  } = _ref;\n  //déclaration de l'état local pour gérer l'envoir du formulaire\n  const [sending, setSending] = useState(false); //calback pour envoyer le formulaire\n\n  const sendContact = useCallback(async evt => {\n    //empeche le comportement par défault\n    evt.preventDefault(); //maj de l'état pour indiquer que l'envoie est en cours\n\n    setSending(true); //appel de l'API similée pour envoyer les données du formulaire\n\n    try {\n      //appel de la fonction mockContactApi\n      await mockContactApi(); //maj de l'état après l'envoie réussi \n\n      setSending(false);\n    } catch (err) {\n      //maj de l'état en cas d'erreur\n      setSending(false); //appel de la fonction onError avec l'erreur\n\n      onError(err);\n    }\n  }, [onSuccess, onError]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: sendContact,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          placeholder: \"\",\n          label: \"Nom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          placeholder: \"\",\n          label: \"Pr\\xE9nom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          selection: [\"Personel\", \"Entreprise\"],\n          onChange: () => null,\n          label: \"Personel / Entreprise\",\n          type: \"large\",\n          titleEmpty: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          placeholder: \"\",\n          label: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: BUTTON_TYPES.SUBMIT,\n          disabled: sending,\n          children: sending ? \"En cours\" : \"Envoyer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          placeholder: \"message\",\n          label: \"Message\",\n          type: FIELD_TYPES.TEXTAREA\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}; //validation des propriétés du composant Form\n\n\n_s(Form, \"xlCfd/hTPL1r13um4H5Lxem8mPc=\");\n\n_c = Form;\nForm.propTypes = {\n  onError: PropTypes.func,\n  onSuccess: PropTypes.func\n}; //définiation des valeurs par défaut des propriétés du composant form\n\nForm.defaultProps = {\n  onError: () => null,\n  onSuccess: () => null\n};\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/quentinhorneck/Documents/Projet10/Debuggez-une-application-React.JS/src/containers/Form/index.js"],"names":["useCallback","useState","PropTypes","Field","FIELD_TYPES","Select","Button","BUTTON_TYPES","mockContactApi","Promise","resolve","setTimeout","Form","onSuccess","onError","sending","setSending","sendContact","evt","preventDefault","err","SUBMIT","TEXTAREA","propTypes","func","defaultProps"],"mappings":"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","sourcesContent":["import { useCallback, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Field, { FIELD_TYPES } from \"../../components/Field\";\nimport Select from \"../../components/Select\";\nimport Button, { BUTTON_TYPES } from \"../../components/Button\";\n\n//simule un appel à une API\nconst mockContactApi = () => new Promise((resolve) => { setTimeout(resolve, 1000); })\n\n//définition du composant form\nconst Form = ({ onSuccess, onError }) => {\n  //déclaration de l'état local pour gérer l'envoir du formulaire\n  const [sending, setSending] = useState(false);\n  //calback pour envoyer le formulaire\n  const sendContact = useCallback(\n    async (evt) => {\n      //empeche le comportement par défault\n      evt.preventDefault();\n      //maj de l'état pour indiquer que l'envoie est en cours\n      setSending(true);\n\n      //appel de l'API similée pour envoyer les données du formulaire\n      try {\n        //appel de la fonction mockContactApi\n        await mockContactApi();\n        //maj de l'état après l'envoie réussi \n        setSending(false);\n      } catch (err) {\n        //maj de l'état en cas d'erreur\n        setSending(false);\n        //appel de la fonction onError avec l'erreur\n        onError(err);\n      }\n    },\n    [onSuccess, onError]\n  );\n  return (\n    <form onSubmit={sendContact}>\n      <div className=\"row\">\n        <div className=\"col\">\n          <Field placeholder=\"\" label=\"Nom\" />\n          <Field placeholder=\"\" label=\"Prénom\" />\n          <Select\n            selection={[\"Personel\", \"Entreprise\"]}\n            onChange={() => null}\n            label=\"Personel / Entreprise\"\n            type=\"large\"\n            titleEmpty\n          />\n          <Field placeholder=\"\" label=\"Email\" />\n          <Button type={BUTTON_TYPES.SUBMIT} disabled={sending}>\n            {sending ? \"En cours\" : \"Envoyer\"}\n          </Button>\n        </div>\n        <div className=\"col\">\n          <Field\n            placeholder=\"message\"\n            label=\"Message\"\n            type={FIELD_TYPES.TEXTAREA}\n          />\n        </div>\n      </div>\n    </form>\n  );\n};\n\n//validation des propriétés du composant Form\nForm.propTypes = {\n  onError: PropTypes.func,\n  onSuccess: PropTypes.func,\n}\n\n//définiation des valeurs par défaut des propriétés du composant form\nForm.defaultProps = {\n  onError: () => null,\n  onSuccess: () => null,\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}