{"ast":null,"code":"var _jsxFileName = \"/Users/quentinhorneck/Documents/Projet10/Debuggez-une-application-React.JS/src/containers/Form/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Field, { FIELD_TYPES } from \"../../components/Field\";\nimport Select from \"../../components/Select\";\nimport Button, { BUTTON_TYPES } from \"../../components/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mockContactApi = () => new Promise(resolve => {\n  setTimeout(resolve, 1000);\n});\n\nconst Form = _ref => {\n  _s();\n\n  let {\n    onSuccess\n  } = _ref;\n  const [sending, setSending] = useState(false);\n  const sendContact = useCallback(async evt => {\n    evt.preventDefault();\n    setSending(true);\n\n    try {\n      await mockContactApi();\n      setSending(false);\n      onSuccess();\n    } catch (err) {\n      setSending(false);\n    }\n  }, [onSuccess]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: sendContact,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          placeholder: \"\",\n          label: \"Nom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          placeholder: \"\",\n          label: \"Pr\\xE9nom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          selection: [\"Personnel\", \"Entreprise\"],\n          onChange: () => null,\n          label: \"Personnel / Entreprise\",\n          type: \"large\",\n          titleEmpty: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          placeholder: \"\",\n          label: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: BUTTON_TYPES.SUBMIT,\n          disabled: sending,\n          children: sending ? \"En cours\" : \"Envoyer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          placeholder: \"Message\",\n          label: \"Message\",\n          type: FIELD_TYPES.TEXTAREA\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"xlCfd/hTPL1r13um4H5Lxem8mPc=\");\n\n_c = Form;\nForm.propTypes = {\n  onSuccess: PropTypes.func.isRequired\n};\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/quentinhorneck/Documents/Projet10/Debuggez-une-application-React.JS/src/containers/Form/index.js"],"names":["React","useCallback","useState","PropTypes","Field","FIELD_TYPES","Select","Button","BUTTON_TYPES","mockContactApi","Promise","resolve","setTimeout","Form","onSuccess","sending","setSending","sendContact","evt","preventDefault","err","SUBMIT","TEXTAREA","propTypes","func","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,QAAmC,wBAAnC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,IAAiBC,YAAjB,QAAqC,yBAArC;;;AAEA,MAAMC,cAAc,GAAG,MAAM,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAAEC,EAAAA,UAAU,CAACD,OAAD,EAAU,IAAV,CAAV;AAA4B,CAAvD,CAA7B;;AAEA,MAAME,IAAI,GAAG,QAAmB;AAAA;;AAAA,MAAlB;AAAEC,IAAAA;AAAF,GAAkB;AAC9B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMe,WAAW,GAAGhB,WAAW,CAC7B,MAAOiB,GAAP,IAAe;AACbA,IAAAA,GAAG,CAACC,cAAJ;AACAH,IAAAA,UAAU,CAAC,IAAD,CAAV;;AAEA,QAAI;AACF,YAAMP,cAAc,EAApB;AACAO,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,MAAAA,SAAS;AACV,KAJD,CAIE,OAAOM,GAAP,EAAY;AACZJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAZ4B,EAa7B,CAACF,SAAD,CAb6B,CAA/B;AAgBA,sBACE;AAAM,IAAA,QAAQ,EAAEG,WAAhB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,WAAW,EAAC,EAAnB;AAAsB,UAAA,KAAK,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,WAAW,EAAC,EAAnB;AAAsB,UAAA,KAAK,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAE,CAAC,WAAD,EAAc,YAAd,CAAnB;AAAgD,UAAA,QAAQ,EAAE,MAAM,IAAhE;AAAsE,UAAA,KAAK,EAAC,wBAA5E;AAAqG,UAAA,IAAI,EAAC,OAA1G;AAAkH,UAAA,UAAU;AAA5H;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,KAAD;AAAO,UAAA,WAAW,EAAC,EAAnB;AAAsB,UAAA,KAAK,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAET,YAAY,CAACa,MAA3B;AAAmC,UAAA,QAAQ,EAAEN,OAA7C;AAAA,oBACGA,OAAO,GAAG,UAAH,GAAgB;AAD1B;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,WAAW,EAAC,SAAnB;AAA6B,UAAA,KAAK,EAAC,SAAnC;AAA6C,UAAA,IAAI,EAAEV,WAAW,CAACiB;AAA/D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CArCD;;GAAMT,I;;KAAAA,I;AAuCNA,IAAI,CAACU,SAAL,GAAiB;AACfT,EAAAA,SAAS,EAAEX,SAAS,CAACqB,IAAV,CAAeC;AADX,CAAjB;AAIA,eAAeZ,IAAf","sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Field, { FIELD_TYPES } from \"../../components/Field\";\nimport Select from \"../../components/Select\";\nimport Button, { BUTTON_TYPES } from \"../../components/Button\";\n\nconst mockContactApi = () => new Promise((resolve) => { setTimeout(resolve, 1000); });\n\nconst Form = ({ onSuccess }) => {\n  const [sending, setSending] = useState(false);\n\n  const sendContact = useCallback(\n    async (evt) => {\n      evt.preventDefault();\n      setSending(true);\n\n      try {\n        await mockContactApi();\n        setSending(false);\n        onSuccess();\n      } catch (err) {\n        setSending(false);\n      }\n    },\n    [onSuccess]\n  );\n\n  return (\n    <form onSubmit={sendContact}>\n      <div className=\"row\">\n        <div className=\"col\">\n          <Field placeholder=\"\" label=\"Nom\" />\n          <Field placeholder=\"\" label=\"PrÃ©nom\" />\n          <Select selection={[\"Personnel\", \"Entreprise\"]} onChange={() => null} label=\"Personnel / Entreprise\" type=\"large\" titleEmpty />\n          <Field placeholder=\"\" label=\"Email\" />\n          <Button type={BUTTON_TYPES.SUBMIT} disabled={sending}>\n            {sending ? \"En cours\" : \"Envoyer\"}\n          </Button>\n        </div>\n        <div className=\"col\">\n          <Field placeholder=\"Message\" label=\"Message\" type={FIELD_TYPES.TEXTAREA} />\n        </div>\n      </div>\n    </form>\n  );\n};\n\nForm.propTypes = {\n  onSuccess: PropTypes.func.isRequired,\n};\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}